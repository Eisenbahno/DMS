services:
  asp_rest_api:
    image: asp_rest_api_image
    build:
      context: .
      dockerfile: ./ASP_Rest_API/Dockerfile
    ports:
      - "8080:8080"
      #- "443:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080 # Stellt sicher, dass nur HTTP verwendet wird
    depends_on:
      - dal

  webui:
    image: web_ui_image
    build:
      context: ./WebUI
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./WebUI/nginx.conf:/etc/nginx/nginx.conf  # Binde die Nginx-Konfigurationsdatei ein
      - ./WebUI/wwwroot:/app/wwwroot  # Statische Dateien mounten
    depends_on:
      - asp_rest_api
  
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data # Binde das Volume für persistente Datenspeicherung ein

  dal:
    image: dal_image
    build:
      context: .
      dockerfile: ./DAL/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8081
    depends_on:
      - db

  rabbitmq_dms:
    image: rabbitmq:management
    container_name: rabbitmq_dms
    platform: linux/amd64
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  ocr_worker:
    image: ocr_worker_image
    build:
      context: ./Ocr_Worker
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq_dms
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./uploads:/app/uploads

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
    ports:
      - "9200:9200"


  indexing_worker:
    build:
      context: ./Ocr_Worker # Path to the Indexing Worker project
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq_dms
      - elasticsearch
    environment:
      RABBITMQ_HOST: rabbitmq_dms
      ELASTICSEARCH_URL: http://elasticsearch:9200

volumes:
  postgres_data:  # Definiertes Volume für persistente Datenspeicherung von PostgreSQL